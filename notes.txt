---------------------------HTML------------------------------

1) Подключение скриптов в HTML
defer - отложенная загрузка скрипта. Скрипт исполняется только после того, как весь HTML подгрузится. Если скрипт работает с вёрсткой, используем defer.
async - асинхронная загрузка скрипта. Если нужно быстрое выполнение скрипта, независимо от подгрузки вёрстки, используем async.
В некоторых CMS-системах атрибут defer может вызвать ошибку. В этом случае скрипт подключается перед закрывающим тегом body. 


----------------------------CSS-------------------------------





-----------------------------JS--------------------------------






-----------------------------GIT--------------------------------

git config --list 
-вызываем список конфигурации гит

git config --global user.name "Marina Belova"
git config --global user.email "salirsky@mail.ru"

git config --global core.autocrlf true - после этой команды гит будет автоматически преобразовывать невидимый символ в конце каждой строки из режима crlf в режим lf

clear - очистить терминал

Есть локальный и глобальный репозиторий.
Локальный - папка на компе
Глобальный - на GitHub, например

git init - инициализируем локальный репозиторий
после чего в папке с проектом появляется скрытая папка .git со всеми данными по проекту

git status - посмотреть, за какими файлами следит гит. Красные - не отслеживается, Зелёные - отслеживается.

git add index.html - добавить файл index.html в отслеживание

git add . - добавить все файлы в отслеживание

Если изменить какой-либо файл, он будет помечен буквой M (Modified), и не будет готов для коммита. Чтобы он был готов для коммита, нужно его снова добавить комнадой git add

git commit -m "Add block to index.html"  - отпраить коммит. Флаг -m должен отражать информацию об изменениях, отправленных в проект.

Один коммит на один функциональный законченный кусок кода. (!!!!!)
Коммит - точка сохранения.

git diff - посмотреть не закоммиченные, но изменённые файлы

git log - посмотреть отправленные ранее команды

git log --oneline  - посмотреть отправленные ранее команды, но в более красивом виде

git checkout dbe495d index.html - команда чтобы откатиться до прошлого коммита только по одному файлу. Если по всем, то ничего не указывать.

 ((dbe495d...)) - в скобках показано, в каком именно коммите мы находимся сейчас.

git checkout master - вернуться к последней версии (назад в будущее!)

git checkout -b dev - создание новой локальной ветки с названием 'dev'

git commit -a -m "название коммита" - объединяет в себе команды git add и git commit

git log --oneline --all --graph
- отобразить все коммиты из всех веток в виде дерева

git branch -D dev - удалить ветку

git merge lesson 01 - объединить ветки


Чтобы перенести локальный репозиторий на удалённый репозиторий, нужно создать удалённый репозиторий, и ввести в терминал локального три команды:

git remote add origin https://github.com/Salirsky/Practice.git - Даст локальному репозиторию адрес удалённого репозитория

git branch -M main

git push -u origin main

Чтобы подтянуть из глобального репозитория файлы, созданные кем-то другим:

git pull


Также если есть конфликт с файлами другого человека, нужно сначала выполнить git pull, а затем согласиться с изменениями (Accept Incoming Change), закоммитить и отправить данные на гит.

git push --set-upstream origin dev




